apply plugin: 'com.android.application'

def appId = rootProject.ext.appId
def cfg = rootProject.ext.android
def deps = rootProject.ext.dependencies

android {
    compileSdkVersion cfg.compileSdk
    defaultConfig {
        applicationId appId['app']
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString(),
                             moduleName           : project.getName()]
            }
        }



    }
    buildTypes {

        debug {
            buildConfigField("String", "BASE_URL", "\"http://api.svipmovie.com/front/\"")
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation deps["appcompat-v7"]
    implementation deps["support-v4"]
    implementation deps["design"]

    implementation deps["butterknife"]
    annotationProcessor deps["butterknife-compiler"]
    implementation deps["circleimageview"]
    implementation deps["room-runtime"]

    implementation deps["arouter-api"]
    annotationProcessor deps["arouter-compiler"]


    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation 'junit:junit:4.12'

    implementation project(':base')

    if (isModule) {
        implementation project(':home')
        implementation project(':finder')
        implementation project(':mine')
        implementation project(':videoplay')
    }

}
